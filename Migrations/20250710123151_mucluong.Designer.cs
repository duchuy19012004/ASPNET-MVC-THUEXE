// <auto-generated />
using System;
using Microsoft.EntityFrameworkCore;
using Microsoft.EntityFrameworkCore.Infrastructure;
using Microsoft.EntityFrameworkCore.Metadata;
using Microsoft.EntityFrameworkCore.Migrations;
using Microsoft.EntityFrameworkCore.Storage.ValueConversion;
using bike.Repository;

#nullable disable

namespace bike.Migrations
{
    [DbContext(typeof(BikeDbContext))]
    [Migration("20250710123151_mucluong")]
    partial class mucluong
    {
        /// <inheritdoc />
        protected override void BuildTargetModel(ModelBuilder modelBuilder)
        {
#pragma warning disable 612, 618
            modelBuilder
                .HasAnnotation("ProductVersion", "8.0.8")
                .HasAnnotation("Relational:MaxIdentifierLength", 128);

            SqlServerModelBuilderExtensions.UseIdentityColumns(modelBuilder);

            modelBuilder.Entity("bike.Models.Banner", b =>
                {
                    b.Property<int>("MaBanner")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int");

                    SqlServerPropertyBuilderExtensions.UseIdentityColumn(b.Property<int>("MaBanner"));

                    b.Property<string>("HinhAnh")
                        .IsRequired()
                        .HasMaxLength(255)
                        .HasColumnType("nvarchar(255)");

                    b.Property<string>("LinkLienKet")
                        .HasMaxLength(500)
                        .HasColumnType("nvarchar(500)");

                    b.Property<string>("MoTa")
                        .HasMaxLength(500)
                        .HasColumnType("nvarchar(500)");

                    b.Property<DateTime?>("NgayCapNhat")
                        .HasColumnType("datetime2");

                    b.Property<DateTime>("NgayTao")
                        .HasColumnType("datetime2");

                    b.Property<int>("ThuTu")
                        .HasColumnType("int");

                    b.Property<string>("TieuDe")
                        .IsRequired()
                        .HasMaxLength(200)
                        .HasColumnType("nvarchar(200)");

                    b.Property<bool>("TrangThai")
                        .HasColumnType("bit");

                    b.HasKey("MaBanner");

                    b.ToTable("Banner");
                });

            modelBuilder.Entity("bike.Models.ChiTietHopDong", b =>
                {
                    b.Property<int>("MaChiTiet")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int");

                    SqlServerPropertyBuilderExtensions.UseIdentityColumn(b.Property<int>("MaChiTiet"));

                    b.Property<string>("GhiChu")
                        .HasMaxLength(500)
                        .HasColumnType("nvarchar(500)");

                    b.Property<decimal>("GiaThueNgay")
                        .HasColumnType("decimal(18, 2)");

                    b.Property<int>("MaHopDong")
                        .HasColumnType("int");

                    b.Property<int>("MaXe")
                        .HasColumnType("int");

                    b.Property<DateTime>("NgayNhanXe")
                        .HasColumnType("datetime2");

                    b.Property<DateTime>("NgayTao")
                        .HasColumnType("datetime2");

                    b.Property<DateTime>("NgayTraXeDuKien")
                        .HasColumnType("datetime2");

                    b.Property<DateTime?>("NgayTraXeThucTe")
                        .HasColumnType("datetime2");

                    b.Property<int>("SoNgayThue")
                        .HasColumnType("int");

                    b.Property<decimal>("ThanhTien")
                        .HasColumnType("decimal(18, 2)");

                    b.Property<string>("TrangThaiXe")
                        .IsRequired()
                        .HasMaxLength(50)
                        .HasColumnType("nvarchar(50)");

                    b.HasKey("MaChiTiet");

                    b.HasIndex("MaHopDong");

                    b.HasIndex("MaXe");

                    b.ToTable("ChiTietHopDong");
                });

            modelBuilder.Entity("bike.Models.ChiTieu", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int");

                    SqlServerPropertyBuilderExtensions.UseIdentityColumn(b.Property<int>("Id"));

                    b.Property<string>("GhiChu")
                        .HasColumnType("nvarchar(max)");

                    b.Property<int?>("MaXe")
                        .HasColumnType("int");

                    b.Property<DateTime>("NgayChi")
                        .HasColumnType("datetime2");

                    b.Property<string>("NoiDung")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.Property<decimal>("SoTien")
                        .HasColumnType("decimal(18, 2)");

                    b.HasKey("Id");

                    b.HasIndex("MaXe");

                    b.ToTable("ChiTieu");
                });

            modelBuilder.Entity("bike.Models.DatCho", b =>
                {
                    b.Property<int>("MaDatCho")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int");

                    SqlServerPropertyBuilderExtensions.UseIdentityColumn(b.Property<int>("MaDatCho"));

                    b.Property<string>("Email")
                        .HasMaxLength(100)
                        .HasColumnType("nvarchar(100)");

                    b.Property<string>("GhiChu")
                        .HasMaxLength(500)
                        .HasColumnType("nvarchar(500)");

                    b.Property<string>("HoTen")
                        .HasMaxLength(100)
                        .HasColumnType("nvarchar(100)");

                    b.Property<int?>("MaUser")
                        .HasColumnType("int");

                    b.Property<int>("MaXe")
                        .HasColumnType("int");

                    b.Property<DateTime>("NgayDat")
                        .HasColumnType("datetime2");

                    b.Property<DateTime>("NgayNhanXe")
                        .HasColumnType("datetime2");

                    b.Property<DateTime>("NgayTraXe")
                        .HasColumnType("datetime2");

                    b.Property<string>("SoDienThoai")
                        .HasMaxLength(20)
                        .HasColumnType("nvarchar(20)");

                    b.Property<string>("TrangThai")
                        .IsRequired()
                        .HasMaxLength(50)
                        .HasColumnType("nvarchar(50)");

                    b.HasKey("MaDatCho");

                    b.HasIndex("MaUser");

                    b.HasIndex("MaXe");

                    b.ToTable("DatCho");
                });

            modelBuilder.Entity("bike.Models.HoaDon", b =>
                {
                    b.Property<int>("MaHoaDon")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int");

                    SqlServerPropertyBuilderExtensions.UseIdentityColumn(b.Property<int>("MaHoaDon"));

                    b.Property<string>("GhiChu")
                        .HasMaxLength(500)
                        .HasColumnType("nvarchar(500)");

                    b.Property<int>("MaHopDong")
                        .HasColumnType("int");

                    b.Property<int?>("MaNguoiTao")
                        .HasColumnType("int");

                    b.Property<DateTime>("NgayTao")
                        .HasColumnType("datetime2");

                    b.Property<DateTime>("NgayThanhToan")
                        .HasColumnType("datetime2");

                    b.Property<decimal>("SoTien")
                        .HasColumnType("decimal(18, 2)");

                    b.Property<string>("TrangThai")
                        .IsRequired()
                        .HasMaxLength(50)
                        .HasColumnType("nvarchar(50)");

                    b.HasKey("MaHoaDon");

                    b.HasIndex("MaHopDong")
                        .IsUnique();

                    b.HasIndex("MaNguoiTao");

                    b.ToTable("HoaDon");
                });

            modelBuilder.Entity("bike.Models.HopDong", b =>
                {
                    b.Property<int>("MaHopDong")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int");

                    SqlServerPropertyBuilderExtensions.UseIdentityColumn(b.Property<int>("MaHopDong"));

                    b.Property<string>("DiaChi")
                        .HasMaxLength(255)
                        .HasColumnType("nvarchar(255)");

                    b.Property<string>("GhiChu")
                        .HasMaxLength(500)
                        .HasColumnType("nvarchar(500)");

                    b.Property<string>("HoTenKhach")
                        .IsRequired()
                        .HasMaxLength(100)
                        .HasColumnType("nvarchar(100)");

                    b.Property<int?>("MaDatCho")
                        .HasColumnType("int");

                    b.Property<int?>("MaKhachHang")
                        .HasColumnType("int");

                    b.Property<int?>("MaNguoiTao")
                        .HasColumnType("int");

                    b.Property<DateTime>("NgayNhanXe")
                        .HasColumnType("datetime2");

                    b.Property<DateTime>("NgayTao")
                        .HasColumnType("datetime2");

                    b.Property<DateTime>("NgayTraXeDuKien")
                        .HasColumnType("datetime2");

                    b.Property<DateTime?>("NgayTraXeThucTe")
                        .HasColumnType("datetime2");

                    b.Property<decimal>("PhuPhi")
                        .HasColumnType("decimal(18, 2)");

                    b.Property<string>("SoCCCD")
                        .IsRequired()
                        .HasMaxLength(20)
                        .HasColumnType("nvarchar(20)");

                    b.Property<string>("SoDienThoai")
                        .IsRequired()
                        .HasMaxLength(20)
                        .HasColumnType("nvarchar(20)");

                    b.Property<decimal>("TienCoc")
                        .HasColumnType("decimal(18, 2)");

                    b.Property<decimal>("TongTien")
                        .HasColumnType("decimal(18, 2)");

                    b.Property<string>("TrangThai")
                        .IsRequired()
                        .HasMaxLength(50)
                        .HasColumnType("nvarchar(50)");

                    b.HasKey("MaHopDong");

                    b.HasIndex("MaDatCho");

                    b.HasIndex("MaKhachHang");

                    b.HasIndex("MaNguoiTao");

                    b.ToTable("HopDong");
                });

            modelBuilder.Entity("bike.Models.LoaiXe", b =>
                {
                    b.Property<int>("MaLoaiXe")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int");

                    SqlServerPropertyBuilderExtensions.UseIdentityColumn(b.Property<int>("MaLoaiXe"));

                    b.Property<DateTime?>("NgayCapNhat")
                        .HasColumnType("datetime2");

                    b.Property<DateTime>("NgayTao")
                        .HasColumnType("datetime2");

                    b.Property<string>("TenLoaiXe")
                        .IsRequired()
                        .HasMaxLength(50)
                        .HasColumnType("nvarchar(50)");

                    b.HasKey("MaLoaiXe");

                    b.ToTable("LoaiXe");
                });

            modelBuilder.Entity("bike.Models.User", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int");

                    SqlServerPropertyBuilderExtensions.UseIdentityColumn(b.Property<int>("Id"));

                    b.Property<string>("Avatar")
                        .HasMaxLength(255)
                        .HasColumnType("nvarchar(255)");

                    b.Property<string>("DiaChi")
                        .HasMaxLength(255)
                        .HasColumnType("nvarchar(255)");

                    b.Property<string>("Email")
                        .IsRequired()
                        .HasMaxLength(100)
                        .HasColumnType("nvarchar(100)");

                    b.Property<bool>("IsActive")
                        .HasColumnType("bit");

                    b.Property<string>("MatKhau")
                        .IsRequired()
                        .HasMaxLength(100)
                        .HasColumnType("nvarchar(100)");

                    b.Property<decimal?>("MucLuong")
                        .HasColumnType("decimal(18,0)");

                    b.Property<DateTime?>("NgayNghiViec")
                        .HasColumnType("datetime2");

                    b.Property<DateTime>("NgayTao")
                        .HasColumnType("datetime2");

                    b.Property<DateTime?>("NgayVaoLam")
                        .HasColumnType("datetime2");

                    b.Property<string>("SoDienThoai")
                        .HasMaxLength(20)
                        .HasColumnType("nvarchar(20)");

                    b.Property<string>("Ten")
                        .IsRequired()
                        .HasMaxLength(100)
                        .HasColumnType("nvarchar(100)");

                    b.Property<string>("VaiTro")
                        .IsRequired()
                        .HasMaxLength(20)
                        .HasColumnType("nvarchar(20)");

                    b.HasKey("Id");

                    b.ToTable("Users");
                });

            modelBuilder.Entity("bike.Models.Xe", b =>
                {
                    b.Property<int>("MaXe")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int");

                    SqlServerPropertyBuilderExtensions.UseIdentityColumn(b.Property<int>("MaXe"));

                    b.Property<string>("BienSoXe")
                        .IsRequired()
                        .HasMaxLength(20)
                        .HasColumnType("nvarchar(20)");

                    b.Property<string>("DongXe")
                        .IsRequired()
                        .HasMaxLength(50)
                        .HasColumnType("nvarchar(50)");

                    b.Property<decimal>("GiaThue")
                        .HasColumnType("decimal(18, 2)");

                    b.Property<string>("HangXe")
                        .IsRequired()
                        .HasMaxLength(50)
                        .HasColumnType("nvarchar(50)");

                    b.Property<string>("HinhAnhXe")
                        .HasMaxLength(255)
                        .HasColumnType("nvarchar(255)");

                    b.Property<int>("MaLoaiXe")
                        .HasColumnType("int");

                    b.Property<string>("TenXe")
                        .IsRequired()
                        .HasMaxLength(100)
                        .HasColumnType("nvarchar(100)");

                    b.Property<string>("TrangThai")
                        .IsRequired()
                        .HasMaxLength(20)
                        .HasColumnType("nvarchar(20)");

                    b.HasKey("MaXe");

                    b.HasIndex("MaLoaiXe");

                    b.ToTable("Xe");
                });

            modelBuilder.Entity("bike.Models.ChiTietHopDong", b =>
                {
                    b.HasOne("bike.Models.HopDong", "HopDong")
                        .WithMany("ChiTietHopDong")
                        .HasForeignKey("MaHopDong")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.HasOne("bike.Models.Xe", "Xe")
                        .WithMany("ChiTietHopDong")
                        .HasForeignKey("MaXe")
                        .OnDelete(DeleteBehavior.NoAction)
                        .IsRequired();

                    b.Navigation("HopDong");

                    b.Navigation("Xe");
                });

            modelBuilder.Entity("bike.Models.ChiTieu", b =>
                {
                    b.HasOne("bike.Models.Xe", "Xe")
                        .WithMany("ChiTieu")
                        .HasForeignKey("MaXe");

                    b.Navigation("Xe");
                });

            modelBuilder.Entity("bike.Models.DatCho", b =>
                {
                    b.HasOne("bike.Models.User", "User")
                        .WithMany()
                        .HasForeignKey("MaUser");

                    b.HasOne("bike.Models.Xe", "Xe")
                        .WithMany()
                        .HasForeignKey("MaXe")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.Navigation("User");

                    b.Navigation("Xe");
                });

            modelBuilder.Entity("bike.Models.HoaDon", b =>
                {
                    b.HasOne("bike.Models.HopDong", "HopDong")
                        .WithOne("HoaDon")
                        .HasForeignKey("bike.Models.HoaDon", "MaHopDong")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.HasOne("bike.Models.User", "NguoiTao")
                        .WithMany()
                        .HasForeignKey("MaNguoiTao")
                        .OnDelete(DeleteBehavior.NoAction);

                    b.Navigation("HopDong");

                    b.Navigation("NguoiTao");
                });

            modelBuilder.Entity("bike.Models.HopDong", b =>
                {
                    b.HasOne("bike.Models.DatCho", "DatCho")
                        .WithMany()
                        .HasForeignKey("MaDatCho");

                    b.HasOne("bike.Models.User", "KhachHang")
                        .WithMany("HopDongKhachHang")
                        .HasForeignKey("MaKhachHang")
                        .OnDelete(DeleteBehavior.NoAction);

                    b.HasOne("bike.Models.User", "NguoiTao")
                        .WithMany("HopDongNguoiTao")
                        .HasForeignKey("MaNguoiTao")
                        .OnDelete(DeleteBehavior.NoAction);

                    b.Navigation("DatCho");

                    b.Navigation("KhachHang");

                    b.Navigation("NguoiTao");
                });

            modelBuilder.Entity("bike.Models.Xe", b =>
                {
                    b.HasOne("bike.Models.LoaiXe", "LoaiXe")
                        .WithMany("Xes")
                        .HasForeignKey("MaLoaiXe")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.Navigation("LoaiXe");
                });

            modelBuilder.Entity("bike.Models.HopDong", b =>
                {
                    b.Navigation("ChiTietHopDong");

                    b.Navigation("HoaDon");
                });

            modelBuilder.Entity("bike.Models.LoaiXe", b =>
                {
                    b.Navigation("Xes");
                });

            modelBuilder.Entity("bike.Models.User", b =>
                {
                    b.Navigation("HopDongKhachHang");

                    b.Navigation("HopDongNguoiTao");
                });

            modelBuilder.Entity("bike.Models.Xe", b =>
                {
                    b.Navigation("ChiTietHopDong");

                    b.Navigation("ChiTieu");
                });
#pragma warning restore 612, 618
        }
    }
}
