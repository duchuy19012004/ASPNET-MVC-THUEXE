@model bike.Models.Xe
@{
    ViewData["Title"] = "Edit";
    Layout = "~/Views/Shared/_AdminLayout.cshtml";
}

@section Styles {
    <link rel="stylesheet" href="~/css/xe-edit.css" />
}

<div class="container py-4">
    <div class="form-container">
        <!-- Header -->
        <div class="form-header">
            <h2 class="mb-0"><i class="bi bi-pencil-square"></i> Chỉnh Sửa Thông Tin Xe</h2>
            <p class="mb-0 opacity-75">Cập nhật thông tin xe trong hệ thống</p>
        </div>

        <!-- Form Body -->
        <div class="form-body">
            <div class="info-badge">
                <i class="bi bi-info-circle"></i> Mã xe: #XE@(Model.MaXe.ToString("D3"))
            </div>

            <form asp-action="Edit" method="post" enctype="multipart/form-data">
                <div asp-validation-summary="ModelOnly" class="alert alert-danger" role="alert"></div>
                <input type="hidden" asp-for="MaXe" />
                <!-- Removed hidden field for HinhAnhXe as it's no longer needed -->

                <div class="row">
                    <!-- Cột trái -->
                    <div class="col-md-6">
                        <!-- Tên xe -->
                        <div class="mb-4">
                            <label asp-for="TenXe" class="form-label">
                                <i class="bi bi-bicycle"></i> @Html.DisplayNameFor(model => model.TenXe)
                                <span class="required">*</span>
                            </label>
                            <input asp-for="TenXe" class="form-control form-control-lg" />
                            <span asp-validation-for="TenXe" class="text-danger small"></span>
                        </div>

                        <!-- Hãng xe -->
                        <div class="mb-4">
                            <label asp-for="HangXe" class="form-label">
                                <i class="bi bi-building"></i> @Html.DisplayNameFor(model => model.HangXe)
                                <span class="required">*</span>
                            </label>
                            <input asp-for="HangXe" class="form-control" />
                            <span asp-validation-for="HangXe" class="text-danger small"></span>
                        </div>

                        <!-- Dòng xe -->
                        <div class="mb-4">
                            <label asp-for="DongXe" class="form-label">
                                <i class="bi bi-tag"></i> @Html.DisplayNameFor(model => model.DongXe)
                                <span class="required">*</span>
                            </label>
                            <input asp-for="DongXe" class="form-control" />
                            <span asp-validation-for="DongXe" class="text-danger small"></span>
                        </div>

                        <!-- Loại xe -->
                        <div class="mb-4">
                            <label asp-for="MaLoaiXe" class="form-label">
                                <i class="bi bi-list-ul"></i> Loại xe
                                <span class="required">*</span>
                            </label>
                            <select asp-for="MaLoaiXe" class="form-select" asp-items="ViewBag.MaLoaiXe">
                                <option value="">-- Chọn loại xe --</option>
                            </select>
                            <span asp-validation-for="MaLoaiXe" class="text-danger small"></span>
                        </div>
                    </div>

                    <!-- Cột phải -->
                    <div class="col-md-6">
                        <!-- Biển số -->
                        <div class="mb-4">
                            <label asp-for="BienSoXe" class="form-label">
                                <i class="bi bi-card-text"></i> @Html.DisplayNameFor(model => model.BienSoXe)
                                <span class="required">*</span>
                            </label>
                            <input asp-for="BienSoXe" class="form-control" />
                            <span asp-validation-for="BienSoXe" class="text-danger small"></span>
                        </div>

                        <!-- Giá thuê -->
                        <div class="mb-4">
                            <label asp-for="GiaThue" class="form-label">
                                <i class="bi bi-currency-dollar"></i> @Html.DisplayNameFor(model => model.GiaThue)
                                <span class="required">*</span>
                            </label>
                            <div class="input-group">
                                <input asp-for="GiaThue" class="form-control" />
                                <span class="input-group-text">VNĐ/ngày</span>
                            </div>
                            <span asp-validation-for="GiaThue" class="text-danger small"></span>
                        </div>

                        <!-- Trạng thái -->
                        <div class="mb-4">
                            <label asp-for="TrangThai" class="form-label">
                                <i class="bi bi-flag"></i> @Html.DisplayNameFor(model => model.TrangThai)
                                <span class="required">*</span>
                            </label>
                            <select asp-for="TrangThai" class="form-select" asp-items="ViewBag.TrangThaiList">
                                <option value="">-- Chọn trạng thái --</option>
                            </select>
                            <span asp-validation-for="TrangThai" class="text-danger small"></span>
                        </div>

                        <!-- Hình ảnh chính -->
                        <div class="mb-4">
                            <label class="form-label">
                                <i class="bi bi-image"></i> Hình ảnh chính
                            </label>
                            <div class="image-preview-container" onclick="document.getElementById('hinhAnh').click()">
                                <input type="file" name="hinhAnh" id="hinhAnh" accept="image/*" style="display:none" onchange="previewMainImage(event)" />
                                <div id="preview-content">
                                                            @if (!string.IsNullOrEmpty(Model.HinhAnhHienThi))
                        {
                            <img src="~/images/xe/@Model.HinhAnhHienThi" alt="@Model.TenXe" />
                                        <span class="current-image-badge">Ảnh hiện tại</span>
                                    }
                                    else
                                    {
                                        <div>
                                            <i class="bi bi-cloud-upload" style="font-size:60px;color:#ddd;"></i>
                                            <p class="mb-0">Click để chọn ảnh</p>
                                        </div>
                                    }
                                </div>
                            </div>
                            <small class="text-muted">Click vào ảnh để thay đổi</small>
                        </div>
                    </div>
                </div>

                <!-- Section divider -->
                <div class="section-divider"></div>

                <!-- Image Management Section -->
                <div class="image-management-section">
                    <h5 class="mb-3">
                        <i class="bi bi-images"></i> Quản lý hình ảnh xe
                        <span class="badge bg-info">@(Model.HinhAnhXes?.Count ?? 0) ảnh</span>
                    </h5>

                    <!-- Existing Images -->
                    @if (Model.HinhAnhXes != null && Model.HinhAnhXes.Any())
                    {
                        <div class="existing-images-grid">
                            @foreach (var hinh in Model.HinhAnhXes)
                            {
                                <div class="image-item @(hinh.LaAnhChinh ? "main-image" : "")">
                                    @if (hinh.LaAnhChinh)
                                    {
                                        <div class="main-badge">
                                            <i class="bi bi-star-fill"></i> Chính
                                        </div>
                                    }
                                    <div class="image-order">#@hinh.ThuTu</div>
                                    
                                    <img src="~/images/xe/@hinh.TenFile" alt="@hinh.MoTa" />
                                    
                                    <div class="image-info">
                                        <input type="text" class="description-input" 
                                               value="@hinh.MoTa" 
                                               placeholder="Mô tả hình ảnh..." 
                                               onblur="updateImageDescription(@hinh.MaHinhAnh, this.value)" />
                                        
                                        <div class="image-actions">
                                            @if (!hinh.LaAnhChinh)
                                            {
                                                <button type="button" class="btn btn-success btn-sm" 
                                                        onclick="setMainImage(@hinh.MaHinhAnh)" 
                                                        title="Đặt làm ảnh chính">
                                                    <i class="bi bi-star"></i>
                                                </button>
                                            }
                                            
                                            @if (!hinh.LaAnhChinh)
                                            {
                                                <button type="button" class="btn btn-danger btn-sm" 
                                                        onclick="deleteImage(@hinh.MaHinhAnh)" 
                                                        title="Xóa ảnh">
                                                    <i class="bi bi-trash"></i>
                                                </button>
                                            }
                                        </div>
                                        
                                        <div class="mt-1">
                                            <small class="text-muted">
                                                <i class="bi bi-calendar3"></i> @hinh.NgayThem.ToString("dd/MM/yyyy")
                                            </small>
                                        </div>
                                    </div>
                                </div>
                            }
                        </div>
                    }
                    else
                    {
                        <div class="no-images-message">
                            <i class="bi bi-images" style="font-size: 48px; color: #ddd;"></i>
                            <p>Chưa có hình ảnh nào được thêm vào xe này</p>
                        </div>
                    }

                    <!-- Add New Images -->
                    <div class="multi-image-upload" id="multiImageUpload">
                        <input type="file" name="hinhAnhKhac" id="hinhAnhKhac" accept="image/*" multiple style="display:none" onchange="previewMultipleImages(event)" />
                        <i class="bi bi-plus-circle" style="font-size: 48px; color: #007bff;"></i>
                        <p class="mb-2 mt-2"><strong>Thêm hình ảnh mới</strong></p>
                        <p class="text-muted mb-0">Kéo thả hoặc click để chọn nhiều hình ảnh</p>
                    </div>

                    <div class="new-image-preview-grid" id="newImagePreviewGrid"></div>
                    
                    <div class="upload-stats" id="uploadStats" style="display: none;">
                        <i class="bi bi-info-circle"></i>
                        <span id="statsText">Chưa có hình ảnh nào được chọn</span>
                    </div>
                </div>

                <!-- Buttons -->
                <div class="d-flex justify-content-between mt-5">
                    <a asp-action="Index" class="btn btn-light btn-lg">
                        <i class="bi bi-arrow-left"></i> Quay lại
                    </a>
                    <div>
                        <a asp-action="Delete" asp-route-id="@Model.MaXe" class="btn btn-danger btn-lg me-2">
                            <i class="bi bi-trash"></i> Xóa xe
                        </a>
                        <button type="submit" class="btn btn-primary btn-lg btn-update">
                            <i class="bi bi-save"></i> Cập nhật
                        </button>
                    </div>
                </div>
            </form>
        </div>
    </div>
</div>

@section Scripts {
    @{
        await Html.RenderPartialAsync("_ValidationScriptsPartial");
    }
    <script>
        let selectedNewFiles = [];

        // Preview main image
        function previewMainImage(event) {
            const file = event.target.files[0];
            if (file) {
                const reader = new FileReader();
                reader.onload = function(e) {
                    document.getElementById('preview-content').innerHTML =
                        '<img src="' + e.target.result + '" alt="Preview" />' +
                        '<span class="current-image-badge">Ảnh mới</span>';
                }
                reader.readAsDataURL(file);
            }
        }

        // Preview multiple new images
        function previewMultipleImages(event) {
            const files = Array.from(event.target.files);
            addNewFilesToPreview(files);
        }

        function addNewFilesToPreview(files) {
            files.forEach(file => {
                if (file.type.startsWith('image/')) {
                    selectedNewFiles.push(file);
                }
            });
            
            updateNewImagePreview();
            updateUploadStats();
        }

        function updateNewImagePreview() {
            const grid = document.getElementById('newImagePreviewGrid');
            grid.innerHTML = '';
            
            selectedNewFiles.forEach((file, index) => {
                const reader = new FileReader();
                reader.onload = function(e) {
                    const div = document.createElement('div');
                    div.className = 'new-image-preview-item';
                    div.innerHTML = `
                        <img src="${e.target.result}" alt="${file.name}" />
                        <button type="button" class="remove-btn" onclick="removeNewImage(${index})">
                            <i class="bi bi-x"></i>
                        </button>
                        <div class="file-name">${file.name}</div>
                    `;
                    grid.appendChild(div);
                };
                reader.readAsDataURL(file);
            });
        }

        function removeNewImage(index) {
            selectedNewFiles.splice(index, 1);
            updateNewImagePreview();
            updateUploadStats();
            updateNewFileInput();
        }

        function updateNewFileInput() {
            const dt = new DataTransfer();
            selectedNewFiles.forEach(file => dt.items.add(file));
            document.getElementById('hinhAnhKhac').files = dt.files;
        }

        function updateUploadStats() {
            const statsDiv = document.getElementById('uploadStats');
            const statsText = document.getElementById('statsText');
            
            if (selectedNewFiles.length === 0) {
                statsDiv.style.display = 'none';
            } else {
                statsDiv.style.display = 'block';
                const totalSize = selectedNewFiles.reduce((sum, file) => sum + file.size, 0);
                const totalSizeMB = (totalSize / (1024 * 1024)).toFixed(2);
                statsText.textContent = `Đã chọn ${selectedNewFiles.length} hình ảnh mới (${totalSizeMB} MB)`;
            }
        }

        // Delete existing image
        function deleteImage(imageId) {
            if (confirm('Bạn có chắc chắn muốn xóa hình ảnh này?')) {
                $.ajax({
                    url: '@Url.Action("DeleteImage", "Xe")',
                    type: 'POST',
                    data: { id: imageId },
                    success: function(response) {
                        if (response.success) {
                            showNotification(response.message, 'success');
                            location.reload();
                        } else {
                            showNotification(response.message, 'error');
                        }
                    },
                    error: function() {
                        showNotification('Có lỗi xảy ra khi xóa hình ảnh', 'error');
                    }
                });
            }
        }

        // Set main image
        function setMainImage(imageId) {
            $.ajax({
                url: '@Url.Action("SetMainImage", "Xe")',
                type: 'POST',
                data: { id: imageId },
                success: function(response) {
                    if (response.success) {
                        showNotification(response.message, 'success');
                        location.reload();
                    } else {
                        showNotification(response.message, 'error');
                    }
                },
                error: function() {
                    showNotification('Có lỗi xảy ra khi đặt hình ảnh chính', 'error');
                }
            });
        }

        // Update image description
        function updateImageDescription(imageId, description) {
            $.ajax({
                url: '@Url.Action("UpdateImageDescription", "Xe")',
                type: 'POST',
                data: { id: imageId, description: description },
                success: function(response) {
                    if (response.success) {
                        showNotification(response.message, 'success');
                    } else {
                        showNotification(response.message, 'error');
                    }
                },
                error: function() {
                    showNotification('Có lỗi xảy ra khi cập nhật mô tả', 'error');
                }
            });
        }

        // Show notification
        function showNotification(message, type) {
            const notification = document.createElement('div');
            notification.className = `alert alert-${type === 'success' ? 'success' : 'danger'} notification`;
            notification.style.cssText = `
                position: fixed;
                top: 20px;
                right: 20px;
                z-index: 9999;
                min-width: 300px;
                box-shadow: 0 4px 12px rgba(0,0,0,0.15);
                border-radius: 8px;
                animation: slideIn 0.3s ease-out;
            `;
            
            notification.innerHTML = `
                <i class="bi bi-${type === 'success' ? 'check-circle' : 'x-circle'}"></i>
                ${message}
                <button type="button" class="btn-close" onclick="this.parentElement.remove()"></button>
            `;
            
            document.body.appendChild(notification);
            
            setTimeout(() => {
                notification.style.animation = 'slideOut 0.3s ease-in';
                setTimeout(() => notification.remove(), 300);
            }, 3000);
        }

        // Drag and drop functionality
        document.addEventListener('DOMContentLoaded', function() {
            const uploadArea = document.getElementById('multiImageUpload');
            
            uploadArea.addEventListener('click', function() {
                document.getElementById('hinhAnhKhac').click();
            });

            uploadArea.addEventListener('dragover', function(e) {
                e.preventDefault();
                uploadArea.classList.add('dragover');
            });

            uploadArea.addEventListener('dragleave', function(e) {
                e.preventDefault();
                uploadArea.classList.remove('dragover');
            });

            uploadArea.addEventListener('drop', function(e) {
                e.preventDefault();
                uploadArea.classList.remove('dragover');
                
                const files = Array.from(e.dataTransfer.files);
                addNewFilesToPreview(files);
                updateNewFileInput();
            });
        });

        // Kiểm tra biển số real-time
        $(document).ready(function() {
            let timeout;
            const maXe = @Model.MaXe;

            $('#BienSoXe').on('input', function() {
                clearTimeout(timeout);
                const bienSo = $(this).val();
                const $input = $(this);
                const $error = $input.next('.text-danger');

                if (bienSo.length > 0) {
                    timeout = setTimeout(function() {
                        $.ajax({
                            url: '@Url.Action("KiemTraBienSo", "Xe")',
                            type: 'GET',
                            data: {
                                bienSoXe: bienSo,
                                maXe: maXe
                            },
                            success: function(result) {
                                if (result === true) {
                                    $input.removeClass('is-invalid').addClass('is-valid');
                                    $error.text('');
                                } else {
                                    $input.removeClass('is-valid').addClass('is-invalid');
                                    $error.text(result);
                                }
                            }
                        });
                    }, 500);
                }
            });

            // Add live preview for price formatting (display only)
            const priceInput = document.getElementById('GiaThue');
            const pricePreview = document.createElement('small');
            pricePreview.className = 'form-text text-info';
            priceInput.parentNode.parentNode.appendChild(pricePreview);

            priceInput.addEventListener('input', function(e) {
                const value = parseInt(e.target.value);
                if (value && !isNaN(value)) {
                    pricePreview.innerHTML = '<i class="bi bi-eye"></i> Hiển thị: ' + value.toLocaleString('vi-VN') + 'đ/ngày';
                } else {
                    pricePreview.innerHTML = '';
                }
            });

            // Initialize price preview on page load
            const currentPrice = parseInt(priceInput.value);
            if (currentPrice && !isNaN(currentPrice)) {
                pricePreview.innerHTML = '<i class="bi bi-eye"></i> Hiển thị: ' + currentPrice.toLocaleString('vi-VN') + 'đ/ngày';
            }
        });
    </script>
}
