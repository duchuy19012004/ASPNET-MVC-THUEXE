@model bike.ViewModels.BaoCaoViewModel
@{
	ViewData["Title"] = "Báo Cáo Tổng Quan"; 
	Layout = "~/Views/Shared/_AdminLayout.cshtml";
}

<style>
    /* Dashboard styles */
    .dashboard-header {
        background: linear-gradient(135deg, #667eea 0%, #764ba2 100%);
        color: white;
        padding: 30px;
        border-radius: 15px;
        margin-bottom: 30px;
    }

    .filter-section {
        background: white;
        padding: 20px;
        border-radius: 10px;
        box-shadow: 0 2px 10px rgba(0,0,0,0.08);
        margin-bottom: 30px;
    }

    /* Stat cards */
    .stat-card {
        background: white;
        border-radius: 15px;
        padding: 25px;
        box-shadow: 0 5px 20px rgba(0,0,0,0.08);
        transition: transform 0.3s;
        height: 100%;
    }

        .stat-card:hover {
            transform: translateY(-5px);
            box-shadow: 0 10px 30px rgba(0,0,0,0.15) !important;
        }

    .stat-icon {
        width: 60px;
        height: 60px;
        border-radius: 15px;
        display: flex;
        align-items: center;
        justify-content: center;
        font-size: 24px;
        margin-bottom: 15px;
    }

        .stat-icon.blue {
            background: linear-gradient(135deg, #4facfe 0%, #00f2fe 100%);
        }

        .stat-icon.orange {
            background: linear-gradient(135deg, #fa709a 0%, #fee140 100%);
        }

        .stat-icon.green {
            background: linear-gradient(135deg, #38ef7d 0%, #11998e 100%);
        }

        .stat-icon.purple {
            background: linear-gradient(135deg, #667eea 0%, #764ba2 100%);
        }

    .stat-value {
        font-size: 32px;
        font-weight: bold;
        color: #333;
        margin-bottom: 5px;
    }

    .stat-label {
        color: #666;
        font-size: 14px;
    }

    .stat-change {
        font-size: 12px;
        margin-top: 10px;
    }

        .stat-change.positive {
            color: #28a745;
        }

        .stat-change.negative {
            color: #dc3545;
        }

    /* Charts */
    .chart-card {
        background: white;
        border-radius: 15px;
        padding: 25px;
        box-shadow: 0 5px 20px rgba(0,0,0,0.08);
        margin-bottom: 30px;
    }

    .chart-header {
        display: flex;
        justify-content: space-between;
        align-items: center;
        margin-bottom: 20px;
    }

    /* Tables */
    .table-card {
        background: white;
        border-radius: 15px;
        overflow: hidden;
        box-shadow: 0 5px 20px rgba(0,0,0,0.08);
    }

    .table-header {
        padding: 20px 25px;
        background: #f8f9fa;
        border-bottom: 1px solid #e9ecef;
        font-weight: bold;
    }

    .status-badge {
        padding: 5px 12px;
        border-radius: 15px;
        font-size: 12px;
        font-weight: 500;
    }

    .status-waiting {
        background: #fff3cd;
        color: #856404;
    }

    .status-confirmed {
        background: #d1ecf1;
        color: #0c5460;
    }

    .status-completed {
        background: #d4edda;
        color: #155724;
    }
</style>

<div class="container-fluid">
    <!-- Dashboard Header -->
    <div class="dashboard-header">
        <h1 class="mb-0"><i class="bi bi-bar-chart-line"></i> Báo Cáo Tổng Quan</h1>
    </div>

    <!-- Filter Section -->
    <div class="filter-section">
        <form method="get" class="row g-3 align-items-end">
            <div class="col-md-4">
                <label class="form-label">Từ ngày</label>
                <input type="date" name="tuNgay" class="form-control" value="@Model.TuNgay.ToString("yyyy-MM-dd")" />
            </div>
            <div class="col-md-4">
                <label class="form-label">Đến ngày</label>
                <input type="date" name="denNgay" class="form-control" value="@Model.DenNgay.ToString("yyyy-MM-dd")" />
            </div>
            <div class="col-md-4">
                <button type="submit" class="btn btn-primary">
                    <i class="bi bi-funnel"></i> Lọc dữ liệu
                </button>
                <a asp-action="ExportExcel" asp-route-tuNgay="@Model.TuNgay" asp-route-denNgay="@Model.DenNgay"
                   class="btn btn-success">
                    <i class="bi bi-file-excel"></i> Xuất Excel
                </a>
            </div>
        </form>
    </div>

    <!-- Statistics Cards -->
    <div class="row mb-4">
        <div class="col-lg-4 col-md-6 mb-3">
            <div class="stat-card">
                <div class="stat-icon blue text-white">
                    <i class="bi bi-calendar-check"></i>
                </div>
                <div class="stat-value">@Model.TongDonDatXe</div>
                <div class="stat-label">Tổng đơn đặt xe</div>
                @if (Model.PhanTramDonDat != 0)
                {
                    <div class="stat-change @(Model.PhanTramDonDat > 0 ? "positive" : "negative")">
                        <i class="bi bi-arrow-@(Model.PhanTramDonDat > 0 ? "up" : "down")"></i>
                        @Math.Abs(Model.PhanTramDonDat).ToString("F1")% so với kỳ trước
                    </div>
                }
            </div>
        </div>

        <div class="col-lg-4 col-md-6 mb-3">
            <div class="stat-card">
                <div class="stat-icon green text-white">
                    <i class="bi bi-cash-stack"></i>
                </div>
                <div class="stat-value">@Model.DoanhThuHomNay.ToString("N0")đ</div>
                <div class="stat-label">Doanh thu hôm nay</div>
                @if (Model.PhanTramDoanhThu != 0)
                {
                    <div class="stat-change @(Model.PhanTramDoanhThu > 0 ? "positive" : "negative")">
                        <i class="bi bi-arrow-@(Model.PhanTramDoanhThu > 0 ? "up" : "down")"></i>
                        @Math.Abs(Model.PhanTramDoanhThu).ToString("F1")% so với kỳ trước
                    </div>
                }
            </div>
        </div>

        <div class="col-lg-4 col-md-6 mb-3">
            <div class="stat-card">
                <div class="stat-icon purple text-white">
                    <i class="bi bi-bicycle"></i>
                </div>
                <div class="stat-value">@Model.XeDangChoThue</div>
                <div class="stat-label">Xe đang cho thuê</div>
            </div>
        </div>
    </div>

    <!-- Charts Row -->
    <div class="row">
        <!-- Biểu đồ doanh thu -->
        <div class="col-lg-6 mb-4">
            <div class="chart-card">
                <div class="chart-header">
                    <h5 class="mb-0">Doanh thu 7 ngày gần nhất</h5>
                    <small class="text-muted">Đơn vị: VNĐ (xe đã trả thành công trừ chi tiêu)</small>
                </div>
                <canvas id="revenueChart" height="100"></canvas>
            </div>
        </div>

        <!-- Biểu đồ đơn đặt -->
        <div class="col-lg-6 mb-4">
            <div class="chart-card">
                <div class="chart-header">
                    <h5 class="mb-0">Đơn đặt xe 7 ngày gần nhất</h5>
                    <small class="text-muted">Số lượng đơn</small>
                </div>
                <canvas id="bookingChart" height="100"></canvas>
            </div>
        </div>
    </div>

    <!-- Tables Row -->
    <div class="row">
        <!-- Top xe thuê nhiều -->
        <div class="col-lg-6 mb-4">
            <div class="table-card">
                <div class="table-header">
                    <i class="bi bi-trophy"></i> Top xe được thuê nhiều nhất
                    <small class="text-muted ms-2">(chỉ tính hợp đồng đã hoàn thành)</small>
                </div>
                <div class="table-responsive">
                    <table class="table table-hover mb-0">
                        <thead>
                            <tr>
                                <th>Xe</th>
                                <th>Biển số</th>
                                <th>Số lần</th>
                                <th>Doanh thu</th>
                            </tr>
                        </thead>
                        <tbody>
                            @foreach (var xe in Model.TopXeThueNhieu)
                            {
                                <tr>
                                    <td>@xe.TenXe</td>
                                    <td>@xe.BienSo</td>
                                    <td><span class="badge bg-primary">@xe.SoLanThue</span></td>
                                    <td class="text-danger fw-bold">@xe.DoanhThu.ToString("N0")đ</td>
                                </tr>
                            }
                        </tbody>
                    </table>
                </div>
            </div>
        </div>

        <!-- Đơn đặt gần đây -->
        <div class="col-lg-6 mb-4">
            <div class="table-card">
                <div class="table-header">
                    <i class="bi bi-clock-history"></i> Đơn đặt xe gần đây
                </div>
                <div class="table-responsive">
                    <table class="table table-hover mb-0">
                        <thead>
                            <tr>
                                
                                <th>Khách hàng</th>
                                <th>Xe</th>
                                <th>Trạng thái</th>
                                <th>Ngày thuê</th>
                            </tr>
                        </thead>
                        <tbody>
                            @foreach (var don in Model.DonDatGanDay)
                            {
                                <tr>
                                    <td>@don.TenKhach</td>
                                    <td>@don.TenXe</td>
                                    <td>
                                        @{
                                            string statusClass = don.TrangThai switch
                                            {
                                                "Chờ xác nhận" => "status-waiting",
                                                "Đang giữ chỗ" => "status-confirmed",
                                                "Đã xử lý" => "status-completed",
                                                _ => ""
                                            };
                                        }
                                        <span class="status-badge @statusClass">@don.TrangThai</span>
                                    </td>
                                    <td>@don.NgayDat</td>
                                </tr>
                            }
                        </tbody>
                    </table>
                </div>
            </div>
        </div>
    </div>
</div>

@section Scripts {
    <script src="https://cdn.jsdelivr.net/npm/chart.js"></script>
    <script>
        // Biểu đồ doanh thu
        const revenueCtx = document.getElementById('revenueChart').getContext('2d');
        new Chart(revenueCtx, {
            type: 'line',
            data: {
                labels: @Html.Raw(Json.Serialize(Model.BieuDoDoanhThu.Select(x => x.Label).ToList())),
                datasets: [{
                    label: 'Doanh thu',
                    data: @Html.Raw(Json.Serialize(Model.BieuDoDoanhThu.Select(x => x.Value).ToList())),
                    borderColor: 'rgb(75, 192, 192)',
                    backgroundColor: 'rgba(75, 192, 192, 0.2)',
                    tension: 0.1
                }]
            },
            options: {
                responsive: true,
                maintainAspectRatio: true, // Để Chart.js tự giữ tỷ lệ
                scales: {
                    y: {
                        beginAtZero: true,
                        ticks: {
                            callback: function(value) {
                                return value.toLocaleString('vi-VN') + 'đ';
                            }
                        }
                    }
                }
            }
        });

        // Biểu đồ đơn đặt
        const bookingCtx = document.getElementById('bookingChart').getContext('2d');
        new Chart(bookingCtx, {
            type: 'bar',
            data: {
                labels: @Html.Raw(System.Text.Json.JsonSerializer.Serialize(Model.BieuDoDonDat.Select(x => x.Label).ToList())),
                datasets: [{
                    label: 'Số đơn',
                    data: @Html.Raw(System.Text.Json.JsonSerializer.Serialize(Model.BieuDoDonDat.Select(x => x.Value).ToList())),
                    backgroundColor: 'rgba(54, 162, 235, 0.5)',
                    borderColor: 'rgb(54, 162, 235)',
                    borderWidth: 1
                }]
            },
            options: {
                responsive: true,
                maintainAspectRatio: true, // Fix: set to true to keep chart height reasonable
                aspectRatio: 2, // Optional: set a custom aspect ratio (width/height)
                scales: {
                    y: {
                        beginAtZero: true,
                        ticks: {
                            stepSize: 1
                        }
                    }
                }
            }
        });
    </script>
}
