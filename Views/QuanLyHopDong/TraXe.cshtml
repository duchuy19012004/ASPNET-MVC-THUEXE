@model bike.Models.HopDong
@{
    ViewData["Title"] = "Xử Lý Trả Xe";
    Layout = "~/Views/Shared/_AdminLayout.cshtml";
    var hasChiTiet = Model.ChiTietHopDong?.Any() == true;
}

<style>
    .return-container {
        max-width: 800px;
        margin: 0 auto;
        padding: 30px 0;
    }

    .return-header {
        background: linear-gradient(135deg, #f093fb 0%, #f5576c 100%);
        color: white;
        padding: 30px;
        border-radius: 15px 15px 0 0;
        text-align: center;
    }

    .return-body {
        background: white;
        padding: 30px;
        border-radius: 0 0 15px 15px;
        box-shadow: 0 5px 20px rgba(0,0,0,0.1);
    }

    .contract-info {
        background: #f8f9fa;
        padding: 20px;
        border-radius: 10px;
        margin-bottom: 30px;
    }

    .info-row {
        display: flex;
        justify-content: space-between;
        padding: 10px 0;
        border-bottom: 1px solid #e9ecef;
    }

        .info-row:last-child {
            border-bottom: none;
        }

    .info-label {
        color: #666;
        font-weight: 500;
    }

    .info-value {
        color: #333;
        font-weight: bold;
    }

    .calculation-section {
        background: #e3f2fd;
        padding: 20px;
        border-radius: 10px;
        margin: 20px 0;
    }

    .calc-row {
        display: flex;
        justify-content: space-between;
        margin-bottom: 10px;
    }

    .total-section {
        background: linear-gradient(135deg, #667eea 0%, #764ba2 100%);
        color: white;
        padding: 20px;
        border-radius: 10px;
        text-align: center;
        margin: 20px 0;
    }

    .total-amount {
        font-size: 36px;
        font-weight: bold;
        margin: 10px 0;
    }

    .btn-complete {
        background: linear-gradient(135deg, #28a745 0%, #20c997 100%);
        color: white;
        border: none;
        padding: 15px 40px;
        font-size: 18px;
        font-weight: bold;
        width: 100%;
    }

    .overdue-warning {
        background: #fff3cd;
        border: 1px solid #ffeaa7;
        color: #856404;
        padding: 15px;
        border-radius: 10px;
        margin-bottom: 20px;
    }

    .form-disabled {
        pointer-events: none;
        opacity: 0.5;
    }

    .cost-preview {
        margin-top: 5px;
        color: #17a2b8;
        font-size: 13px;
    }

    .cost-preview i {
        margin-right: 5px;
    }
</style>

<div class="return-container">
    <!-- Header -->
    <div class="return-header">
        <h2><i class="bi bi-arrow-return-left"></i> Xử Lý Trả Xe</h2>
        <p class="mb-0">Hợp đồng: HD@(Model.MaHopDong.ToString("D6"))</p>
    </div>

    <!-- Body -->
    <div class="return-body">
        <!-- Thông tin hợp đồng -->
        <h4 class="mb-3"><i class="bi bi-info-circle"></i> Thông tin hợp đồng</h4>
        <div class="contract-info">
            <div class="row">
                <div class="col-md-6">
                    <div class="info-row">
                        <span class="info-label">Khách hàng:</span>
                        <span class="info-value">@Model.HoTenKhach</span>
                    </div>
                    <div class="info-row">
                        <span class="info-label">Số điện thoại:</span>
                        <span class="info-value">@Model.SoDienThoai</span>
                    </div>
                    <div class="info-row">
                        <span class="info-label">CCCD:</span>
                        <span class="info-value">@Model.SoCCCD</span>
                    </div>
                </div>
                <div class="col-md-6">
                    @if (hasChiTiet)
                    {
                        var chiTietDau = Model.ChiTietHopDong.First();
                        <div class="info-row">
                            <span class="info-label">Xe:</span>
                            <span class="info-value">@chiTietDau.Xe?.TenXe</span>
                        </div>
                        <div class="info-row">
                            <span class="info-label">Biển số:</span>
                            <span class="info-value">@chiTietDau.Xe?.BienSoXe</span>
                        </div>
                        <div class="info-row">
                            <span class="info-label">Giá thuê/ngày:</span>
                            <span class="info-value text-danger">@chiTietDau.GiaThueNgay.ToString("N0")đ</span>
                        </div>
                    }
                    else
                    {
                        <div class="info-row">
                            <span class="info-label">Xe:</span>
                            <span class="info-value text-danger">Chưa có thông tin xe</span>
                        </div>
                    }
                </div>
            </div>
        </div>

        <!-- Cảnh báo trả trễ -->
        @{
            var ngayTraDuKien = Model.NgayTraXeDuKien.Date;
            var ngayHienTai = DateTime.Now.Date;
            var soNgayTre = (ngayHienTai - ngayTraDuKien).Days;
        }
        @if (soNgayTre > 0)
        {
            <div class="overdue-warning">
                <i class="bi bi-exclamation-triangle"></i>
                <strong>Lưu ý:</strong> Khách trả xe trễ @soNgayTre ngày so với hợp đồng!
            </div>
        }

        @if (!hasChiTiet)
        {
            <div class="alert alert-danger">
                <i class="bi bi-exclamation-triangle-fill"></i>
                <strong>Lỗi:</strong> Hợp đồng này không có thông tin xe thuê! Vui lòng kiểm tra lại dữ liệu.
                <br><small>Form trả xe đã bị vô hiệu hóa cho đến khi có đầy đủ thông tin xe.</small>
            </div>
        }
    
        <!-- Form trả xe -->
        <form asp-action="TraXe" method="post" class="@(!hasChiTiet ? "form-disabled" : "")">
            <input type="hidden" name="id" value="@Model.MaHopDong" />

            <h4 class="mb-3"><i class="bi bi-calendar-check"></i> Thông tin trả xe</h4>

            <div class="row">
                <div class="col-md-6">
                    <div class="mb-3">
                        <label class="form-label">Ngày nhận xe</label>
                        <input type="date" class="form-control" value="@Model.NgayNhanXe.ToString("yyyy-MM-dd")" readonly />
                    </div>
                </div>
                <div class="col-md-6">
                    <div class="mb-3">
                        <label class="form-label">Ngày trả xe thực tế <span class="text-danger">*</span></label>
                        <input type="date" name="ngayTraThucTe" class="form-control"
                               value="@DateTime.Now.ToString("yyyy-MM-dd")" required onchange="calculateFinal()" />
                    </div>
                </div>
            </div>

            <!-- Tính toán -->
            <div class="calculation-section">
                <h5 class="mb-3">Tính toán chi phí</h5>
                <div class="calc-row">
                    <span>Số ngày thuê:</span>
                    <span id="soNgayThue">0 ngày</span>
                </div>
                <div class="calc-row">
                    <span>Tiền thuê xe (@(hasChiTiet ? Model.ChiTietHopDong.First().GiaThueNgay.ToString("N0") : "0")đ/ngày):</span>
                    <span id="tienThueXe">0đ</span>
                </div>
                <div class="calc-row">
                    <span>Tiền cọc đã thu:</span>
                    <span>@Model.TienCoc.ToString("N0")đ</span>
                </div>
            </div>

            <!-- Báo cáo tình trạng xe -->
            @if (hasChiTiet)
            {
                <h4 class="mb-3"><i class="bi bi-shield-exclamation"></i> Báo cáo tình trạng xe</h4>
                <div class="damage-report-section">
                    @foreach (var chiTiet in Model.ChiTietHopDong.Select((ct, index) => new { ct, index }))
                    {
                        <div class="vehicle-damage-card mb-4" style="border: 1px solid #dee2e6; border-radius: 10px; padding: 20px; background: #f8f9fa;">
                            <h5 class="mb-3">
                                <i class="bi bi-bicycle"></i> 
                                @chiTiet.ct.Xe?.TenXe - @chiTiet.ct.Xe?.BienSoXe
                                <small class="text-muted">(Giá trị xe: @chiTiet.ct.Xe?.GiaTriXe.ToString("N0")đ)</small>
                            </h5>
                            
                            <div class="row">
                                <div class="col-md-6">
                                    <div class="mb-3">
                                        <label class="form-label">Tình trạng xe <span class="text-danger">*</span></label>
                                        <select name="tinhTrangTraXe" class="form-select" onchange="handleDamageChange(@chiTiet.index)" data-index="@chiTiet.index">
                                            <option value="Bình thường">Bình thường - Không có vấn đề</option>
                                            <option value="Hư hỏng nhẹ">Hư hỏng nhẹ - Có thể sửa chữa nhanh</option>
                                            <option value="Hư hỏng nặng">Hư hỏng nặng - Cần sửa chữa lớn</option>
                                            <option value="Mất">Mất - Xe bị mất trộm/bị tai nạn nặng</option>
                                            <option value="Tai nạn">Tai nạn - Xe bị hỏng do tai nạn</option>
                                        </select>
                                    </div>
                                </div>
                                <div class="col-md-6">
                                    <div class="mb-3">
                                        <label class="form-label">Mô tả thiệt hại (nếu có)</label>
                                        <textarea name="moTaThietHai" class="form-control" rows="2" 
                                                  placeholder="Mô tả chi tiết về thiệt hại: vị trí, mức độ..."
                                                  data-index="@chiTiet.index"></textarea>
                                    </div>
                                </div>
                            </div>

                            <div class="damage-cost-section" id="damageCost_@chiTiet.index" style="display: none;">
                                <div class="row">
                                    <div class="col-md-6">
                                        <div class="mb-3">
                                            <label class="form-label">Chi phí sửa chữa ước tính</label>
                                            <input type="number" name="chiPhiSuaChua" class="form-control cost-input" value="0"
                                                   placeholder="Nhập chi phí ước tính..." 
                                                   onchange="calculateCompensation(@chiTiet.index)"
                                                   oninput="formatCostDisplay(@chiTiet.index)"
                                                   data-index="@chiTiet.index" id="costInput_@chiTiet.index" />
                                            
                                        </div>
                                    </div>
                                    <div class="col-md-6">
                                        <div class="compensation-display" id="compensationDisplay_@chiTiet.index">
                                            <label class="form-label">Phí đền bù dự kiến</label>
                                            <div class="compensation-amount" id="compensationAmount_@chiTiet.index" 
                                                 style="font-size: 18px; font-weight: bold; color: #dc3545;">0đ</div>
                                            <small class="text-muted compensation-note" id="compensationNote_@chiTiet.index"></small>
                                        </div>
                                    </div>
                                </div>
                            </div>
                        </div>
                    }
                </div>
            }

            <!-- Phụ phí -->
            <div class="mb-3">
                <label class="form-label">Phụ phí khác (nếu có)</label>
                <input type="number" name="phuPhi" class="form-control cost-input" value="0"
                       placeholder="Phụ phí khác: xăng, vệ sinh, phạt trả trễ..." 
                       onchange="calculateFinal()" 
                       oninput="formatOtherFeeDisplay()" id="otherFeeInput" />
                <small class="text-muted">Ví dụ: nhập 50000 cho phí xăng</small>
            </div>

            <!-- Ghi chú -->
            <div class="mb-3">
                <label class="form-label">Ghi chú khi trả xe</label>
                <textarea name="ghiChu" class="form-control" rows="3"
                          placeholder="Ghi chú chung về quá trình trả xe..."></textarea>
            </div>

            <!-- Tổng tiền -->
            <div class="total-section">
                <h4>Tổng tiền thanh toán</h4>
                <div class="total-amount" id="tongTienFinal">0đ</div>
                <p class="mb-0">Đã bao gồm tiền thuê và phụ phí</p>
            </div>

            <!-- Buttons -->
            <div class="d-flex gap-3 mt-4">
                <button type="submit" class="btn btn-complete flex-fill" @(!hasChiTiet ? "disabled" : "")>
                    <i class="bi bi-check-circle"></i> Hoàn Tất Trả Xe
                </button>
                <a asp-action="Index" class="btn btn-secondary">
                    <i class="bi bi-arrow-left"></i> Quay lại
                </a>
            </div>
        </form>
    </div>
</div>

@section Scripts {
    <script>
        // Dữ liệu xe để tính toán
        const vehicleData = [
            @if (hasChiTiet && Model.ChiTietHopDong.Any())
            {
                @foreach (var chiTiet in Model.ChiTietHopDong.Select((ct, index) => new { ct, index }))
                {
                    @:{
                        @:giaTriXe: @(chiTiet.ct.Xe?.GiaTriXe ?? 0),
                        @:giaThueNgay: @chiTiet.ct.GiaThueNgay
                    @:}@(chiTiet.index < Model.ChiTietHopDong.Count - 1 ? "," : "")
                }
            }
        ];

        let totalCompensation = 0;

        // Format hiển thị chi phí
        function formatCostDisplay(index) {
            const costInput = document.getElementById(`costInput_${index}`);
            if (!costInput) return;
            
            let costPreview = costInput.parentNode.querySelector('.cost-preview');
            if (!costPreview) {
                costPreview = document.createElement('small');
                costPreview.className = 'form-text cost-preview';
                costInput.parentNode.appendChild(costPreview);
            }
            
            const value = parseInt(costInput.value) || 0;
            if (value > 0) {
                costPreview.innerHTML = '<i class="bi bi-eye"></i> Hiển thị: ' + value.toLocaleString('vi-VN') + 'đ';
            } else {
                costPreview.innerHTML = '';
            }
        }

        // Format hiển thị phụ phí
        function formatOtherFeeDisplay() {
            const otherFeeInput = document.getElementById('otherFeeInput');
            if (!otherFeeInput) return;
            
            let otherFeePreview = otherFeeInput.parentNode.querySelector('.cost-preview');
            if (!otherFeePreview) {
                otherFeePreview = document.createElement('small');
                otherFeePreview.className = 'form-text cost-preview';
                otherFeeInput.parentNode.appendChild(otherFeePreview);
            }
            
            const value = parseInt(otherFeeInput.value) || 0;
            if (value > 0) {
                otherFeePreview.innerHTML = '<i class="bi bi-eye"></i> Hiển thị: ' + value.toLocaleString('vi-VN') + 'đ';
            } else {
                otherFeePreview.innerHTML = '';
            }
        }

        // Xử lý thay đổi tình trạng xe
        function handleDamageChange(index) {
            const damageSelect = document.querySelector(`select[name="tinhTrangTraXe"][data-index="${index}"]`);
            const damageCostSection = document.getElementById(`damageCost_${index}`);
            const damageType = damageSelect.value;

            if (damageType === "Bình thường") {
                damageCostSection.style.display = "none";
                updateCompensationDisplay(index, 0, "Không có thiệt hại");
            } else {
                damageCostSection.style.display = "block";
                calculateCompensation(index);
            }

            calculateFinal();
        }

        // Tính toán phí đền bù cho xe
        function calculateCompensation(index) {
            const damageSelect = document.querySelector(`select[name="tinhTrangTraXe"][data-index="${index}"]`);
            const repairCostInput = document.querySelector(`input[name="chiPhiSuaChua"][data-index="${index}"]`);
            
            const damageType = damageSelect.value;
            const repairCost = parseFloat(repairCostInput.value) || 0;
            const vehicleValue = vehicleData[index]?.giaTriXe || 0;

            let compensation = 0;
            let note = "";

            switch (damageType) {
                case "Bình thường":
                    compensation = 0;
                    note = "Không có thiệt hại";
                    break;
                case "Hư hỏng nhẹ":
                    compensation = Math.min(repairCost * 1.2, vehicleValue * 0.15);
                    note = "120% chi phí sửa chữa (tối đa 15% giá trị xe)";
                    break;
                case "Hư hỏng nặng":
                    compensation = Math.min(repairCost * 1.3, vehicleValue * 0.6);
                    note = "130% chi phí sửa chữa (tối đa 60% giá trị xe)";
                    break;
                case "Mất":
                    compensation = vehicleValue;
                    note = "100% giá trị xe - Xe không thể phục hồi";
                    break;
                case "Tai nạn":
                    compensation = Math.min(repairCost * 1.5, vehicleValue * 0.8);
                    note = "150% chi phí sửa chữa (tối đa 80% giá trị xe)";
                    break;
            }

            updateCompensationDisplay(index, compensation, note);
            formatCostDisplay(index);
            calculateFinal();
        }

        // Cập nhật hiển thị phí đền bù
        function updateCompensationDisplay(index, amount, note) {
            const amountElement = document.getElementById(`compensationAmount_${index}`);
            const noteElement = document.getElementById(`compensationNote_${index}`);
            
            if (amountElement) {
                amountElement.innerHTML = amount.toLocaleString('vi-VN') + 'đ';
                amountElement.style.color = amount > 0 ? '#dc3545' : '#28a745';
            }
            
            if (noteElement) {
                noteElement.innerHTML = note;
            }
        }

        // Tính tổng phí đền bù
        function getTotalCompensation() {
            let total = 0;
            const vehicleCount = vehicleData.length;
            
            for (let i = 0; i < vehicleCount; i++) {
                const damageSelect = document.querySelector(`select[name="tinhTrangTraXe"][data-index="${i}"]`);
                const repairCostInput = document.querySelector(`input[name="chiPhiSuaChua"][data-index="${i}"]`);
                
                if (damageSelect && repairCostInput) {
                    const damageType = damageSelect.value;
                    const repairCost = parseFloat(repairCostInput.value) || 0;
                    const vehicleValue = vehicleData[i]?.giaTriXe || 0;

                    if (damageType !== "Bình thường") {
                        let compensation = 0;
                        switch (damageType) {
                            case "Hư hỏng nhẹ":
                                compensation = Math.min(repairCost * 1.2, vehicleValue * 0.15);
                                break;
                            case "Hư hỏng nặng":
                                compensation = Math.min(repairCost * 1.3, vehicleValue * 0.6);
                                break;
                            case "Mất":
                                compensation = vehicleValue;
                                break;
                            case "Tai nạn":
                                compensation = Math.min(repairCost * 1.5, vehicleValue * 0.8);
                                break;
                        }
                        total += compensation;
                    }
                }
            }
            
            return total;
        }

        function calculateFinal() {
            try {
                const ngayNhan = new Date('@Model.NgayNhanXe.ToString("yyyy-MM-dd")');
                const ngayTraInput = document.querySelector('input[name="ngayTraThucTe"]').value;
                const ngayTra = new Date(ngayTraInput);
                const giaThue = @(hasChiTiet && Model.ChiTietHopDong.Any() ? Model.ChiTietHopDong.First().GiaThueNgay : 0);
                const phuPhi = parseFloat(document.querySelector('input[name="phuPhi"]').value) || 0;
                const phiDenBu = getTotalCompensation();
                
                console.log('Calculate Final - ngayNhan:', ngayNhan, 'ngayTra:', ngayTra, 'giaThue:', giaThue, 'phiDenBu:', phiDenBu);

            if (ngayTra && ngayTra >= ngayNhan) {
                // Tính số ngày thuê
                const soNgay = Math.ceil((ngayTra - ngayNhan) / (1000 * 60 * 60 * 24)) + 1;
                const tienThue = soNgay * giaThue;
                const tongTien = tienThue + phuPhi + phiDenBu;

                document.getElementById('soNgayThue').innerHTML = soNgay + ' ngày';
                document.getElementById('tienThueXe').innerHTML = tienThue.toLocaleString('vi-VN') + 'đ';
                
                // Cập nhật hiển thị trong calculation section
                const calcSection = document.querySelector('.calculation-section');
                
                // Xóa dòng phí đền bù cũ nếu có
                const existingCompensationRow = calcSection.querySelector('.compensation-row');
                if (existingCompensationRow) {
                    existingCompensationRow.remove();
                }
                
                // Thêm dòng phí đền bù nếu > 0
                if (phiDenBu > 0) {
                    const compensationRow = document.createElement('div');
                    compensationRow.className = 'calc-row compensation-row';
                    compensationRow.innerHTML = `
                        <span>Phí đền bù thiệt hại:</span>
                        <span style="color: #dc3545; font-weight: bold;">${phiDenBu.toLocaleString('vi-VN')}đ</span>
                    `;
                    calcSection.appendChild(compensationRow);
                }
                
                document.getElementById('tongTienFinal').innerHTML = tongTien.toLocaleString('vi-VN') + 'đ';
                
                // Thay đổi màu sắc tổng tiền nếu có đền bù
                const tongTienElement = document.getElementById('tongTienFinal');
                if (phiDenBu > 0) {
                    tongTienElement.style.color = '#dc3545';
                } else {
                    tongTienElement.style.color = 'white';
                }
            }
            } catch (error) {
                console.error('Error in calculateFinal:', error);
            }
        }

        // Khởi tạo khi load trang
        $(document).ready(function() {
            console.log('Page loaded, vehicleData:', vehicleData);
            console.log('hasChiTiet:', @hasChiTiet.ToString().ToLower());
            
            // Khởi tạo format display cho tất cả input chi phí
            @if (hasChiTiet && Model.ChiTietHopDong.Any())
            {
                @for (int i = 0; i < Model.ChiTietHopDong.Count; i++)
                {
                    @:formatCostDisplay(@i);
                }
            }
            
            // Khởi tạo format display cho phụ phí
            formatOtherFeeDisplay();
            
            calculateFinal();
            
            // Validate form trước khi submit
            $('form').on('submit', function(e) {
                console.log('Form submit triggered');
                
                // Kiểm tra có dữ liệu xe không
                if (!@hasChiTiet.ToString().ToLower()) {
                    e.preventDefault();
                    alert('Không thể trả xe vì hợp đồng thiếu thông tin xe!');
                    return false;
                }
                
                let hasUnreportedDamage = false;
                $('select[name="tinhTrangTraXe"]').each(function() {
                    const index = $(this).data('index');
                    const damageType = $(this).val();
                    const description = $(`textarea[name="moTaThietHai"][data-index="${index}"]`).val();
                    
                    if (damageType !== "Bình thường" && !description.trim()) {
                        hasUnreportedDamage = true;
                        $(this).addClass('is-invalid');
                        $(`textarea[name="moTaThietHai"][data-index="${index}"]`).addClass('is-invalid');
                    } else {
                        $(this).removeClass('is-invalid');
                        $(`textarea[name="moTaThietHai"][data-index="${index}"]`).removeClass('is-invalid');
                    }
                });
                
                if (hasUnreportedDamage) {
                    e.preventDefault();
                    alert('Vui lòng mô tả chi tiết về thiệt hại cho các xe bị hư hỏng!');
                    return false;
                }
                
                const totalCompensation = getTotalCompensation();
                console.log('Total compensation:', totalCompensation);
                
                if (totalCompensation > 0) {
                    const confirmMessage = `Tổng phí đền bù: ${totalCompensation.toLocaleString('vi-VN')}đ\n\nXác nhận hoàn tất trả xe với phí đền bù này?`;
                    return confirm(confirmMessage);
                }
                
                const confirmed = confirm('Xác nhận hoàn tất trả xe?');
                if (confirmed) {
                    // Hiển thị loading state
                    const submitBtn = $(this).find('button[type="submit"]');
                    const originalText = submitBtn.html();
                    submitBtn.prop('disabled', true).html('<span class="spinner-border spinner-border-sm me-2"></span>Đang xử lý...');
                    
                    // Nếu có lỗi, sẽ restore button trong 10 giây
                    setTimeout(function() {
                        submitBtn.prop('disabled', false).html(originalText);
                    }, 10000);
                }
                return confirmed;
            });
        });
    </script>
}
