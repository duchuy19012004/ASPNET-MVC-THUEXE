@model IEnumerable<bike.Models.HopDong>
@{
	ViewData["Title"] = "Quản Lý Hợp Đồng";
	Layout = "~/Views/Shared/_AdminLayout.cshtml";
    int totalPages = (int)Math.Ceiling((double)ViewBag.TotalItems / ViewBag.PageSize);
    int currentPage = ViewBag.CurrentPage;
}

<style>
    .page-header {
        margin-bottom: 30px;
    }

    .stat-cards {
        margin-bottom: 30px;
    }

    .stat-card {
        background: white;
        border-radius: 10px;
        padding: 20px;
        text-align: center;
        box-shadow: 0 2px 10px rgba(0,0,0,0.08);
        transition: transform 0.3s;
        height: 190px; /* Tăng thêm chiều cao để có khoảng cách thoáng hơn */
        display: flex;
        flex-direction: column;
        justify-content: space-between; /* Phân bố đều các elements */
        align-items: center;
        position: relative;
    }

        .stat-card:hover {
            transform: translateY(-5px);
        }

    /* Hiệu ứng đặc biệt cho card Đơn chờ xử lý */
    a .stat-card:hover {
        transform: translateY(-8px);
        border-color: #ff6b35 !important;
        box-shadow: 0 8px 25px rgba(255, 107, 53, 0.2) !important;
    }

    /* Đảm bảo các col cards có cùng chiều cao */
    .stat-cards .col-lg-3 {
        display: flex;
    }

    .stat-cards .col-lg-3 > a,
    .stat-cards .col-lg-3 > .stat-card {
        width: 100%;
    }

    /* Container cho icon - đảm bảo thẳng hàng */
    .stat-icon-container {
        height: 60px; /* Tăng để tạo thêm khoảng cách */
        display: flex;
        align-items: center;
        justify-content: center;
        margin-bottom: 5px; /* Thêm margin để tạo khoảng cách với số */
    }

    /* Icon căn chỉnh chính xác */
    .stat-card i {
        font-size: 40px !important;
        line-height: 1;
        margin: 0;
    }

    /* Container cho số - đảm bảo thẳng hàng */
    .stat-number-container {
        height: 50px;
        display: flex;
        align-items: center;
        justify-content: center;
        margin-bottom: 5px; /* Thêm margin để tạo khoảng cách với label */
    }

    .stat-number {
        font-size: 36px;
        font-weight: bold;
        line-height: 1;
        margin: 0;
    }

    /* Container cho label - đảm bảo thẳng hàng */
    .stat-label-container {
        height: 40px;
        display: flex;
        align-items: center;
        justify-content: center;
        flex-direction: column;
    }

    .stat-label {
        color: #666;
        font-size: 14px;
        line-height: 1.2;
        margin: 0;
    }

    /* Container cho dòng extra (Click để xử lý) */
    .stat-extra-container {
        height: 20px;
        display: flex;
        align-items: center;
        justify-content: center;
    }

    /* Styling cho dòng "Click để xử lý" */
    .stat-card .text-muted.small {
        font-size: 12px;
        line-height: 1.2;
        margin: 0;
    }

    .stat-active {
        color: #28a745;
    }

    .stat-completed {
        color: #17a2b8;
    }

    .filter-section {
        background: white;
        padding: 20px;
        border-radius: 10px;
        margin-bottom: 30px;
        box-shadow: 0 2px 10px rgba(0,0,0,0.08);
    }

    .contract-table {
        background: white;
        border-radius: 10px;
        overflow: hidden;
        box-shadow: 0 2px 10px rgba(0,0,0,0.08);
    }

    .status-badge {
        padding: 5px 15px;
        border-radius: 20px;
        font-size: 12px;
        font-weight: 500;
    }

    .status-active {
        background: #d4edda;
        color: #155724;
    }

    .status-completed {
        background: #d1ecf1;
        color: #0c5460;
    }

    .status-cancelled {
        background: #f8d7da;
        color: #721c24;
    }

    /* Search box styles */
    .search-box {
        position: relative;
    }

    .search-icon {
        position: absolute;
        top: 50%;
        left: 15px;
        transform: translateY(-50%);
        color: #6c757d;
    }

    .search-input {
        padding-left: 40px;
        border-radius: 25px;
        border: 2px solid #e0e0e0;
        transition: all 0.3s;
    }

        .search-input:focus {
            border-color: #007bff;
            box-shadow: 0 0 0 0.2rem rgba(0,123,255,.25);
        }

    .clear-search {
        position: absolute;
        top: 50%;
        right: 15px;
        transform: translateY(-50%);
        cursor: pointer;
        color: #6c757d;
        display: none;
    }

    tr.highlight-row {
        background-color: #fff3cd !important;
        transition: background-color 0.3s;
    }

    /* Badge "new" cho đơn chờ xử lý */
    .new-notification-badge {
        position: absolute;
        top: 8px;
        right: 8px;
        background: linear-gradient(135deg, #ff4757 0%, #ff3838 100%);
        color: white;
        border-radius: 50%;
        width: 24px;
        height: 24px;
        display: flex;
        align-items: center;
        justify-content: center;
        font-size: 10px;
        font-weight: bold;
        box-shadow: 0 2px 8px rgba(255, 71, 87, 0.4);
        animation: pulse-new 2s infinite;
        z-index: 10;
        border: 2px solid white;
    }

    @@keyframes pulse-new {
        0% { transform: scale(1); }
        50% { transform: scale(1.1); }
        100% { transform: scale(1); }
    }

    /* Hiệu ứng đặc biệt khi có đơn mới */
    .has-new-orders .stat-card {
        border: 2px solid #ff4757 !important;
        box-shadow: 0 4px 15px rgba(255, 71, 87, 0.2) !important;
    }

    .has-new-orders .stat-card:hover {
        transform: translateY(-8px);
        box-shadow: 0 8px 25px rgba(255, 71, 87, 0.3) !important;
    }

    /* Notification Banner */
    .notification-banner {
        background: linear-gradient(135deg, #ff4757 0%, #ff3838 100%);
        color: white;
        padding: 15px 20px;
        border-radius: 10px;
        margin-bottom: 25px;
        box-shadow: 0 4px 15px rgba(255, 71, 87, 0.3);
        position: relative;
        overflow: hidden;
        animation: slideInDown 0.5s ease-out;
    }

    .notification-banner::before {
        content: '';
        position: absolute;
        top: 0;
        left: -100%;
        width: 100%;
        height: 100%;
        background: linear-gradient(90deg, transparent, rgba(255,255,255,0.2), transparent);
        animation: shimmer 2s infinite;
    }

    .notification-content {
        display: flex;
        align-items: center;
        justify-content: space-between;
        position: relative;
        z-index: 2;
    }

    .notification-text {
        display: flex;
        align-items: center;
        font-weight: 600;
    }

    .notification-text i {
        font-size: 24px;
        margin-right: 12px;
        animation: pulse-icon 1.5s infinite;
    }

    .notification-actions {
        display: flex;
        gap: 10px;
    }

    .btn-notification {
        background: rgba(255,255,255,0.2);
        color: white;
        border: 1px solid rgba(255,255,255,0.3);
        padding: 8px 16px;
        border-radius: 5px;
        font-size: 14px;
        font-weight: 600;
        transition: all 0.3s;
        text-decoration: none;
    }

    .btn-notification:hover {
        background: rgba(255,255,255,0.3);
        color: white;
        transform: translateY(-2px);
        box-shadow: 0 4px 8px rgba(0,0,0,0.2);
    }

    .close-notification {
        background: none;
        border: none;
        color: white;
        font-size: 20px;
        cursor: pointer;
        padding: 0;
        width: 30px;
        height: 30px;
        display: flex;
        align-items: center;
        justify-content: center;
        border-radius: 50%;
        transition: all 0.3s;
    }

    .close-notification:hover {
        background: rgba(255,255,255,0.2);
        transform: rotate(90deg);
    }

    @@keyframes slideInDown {
        from {
            transform: translateY(-100%);
            opacity: 0;
        }
        to {
            transform: translateY(0);
            opacity: 1;
        }
    }

    @@keyframes shimmer {
        0% { left: -100%; }
        100% { left: 100%; }
    }

    @@keyframes pulse-icon {
        0%, 100% { transform: scale(1); }
        50% { transform: scale(1.1); }
    }
</style>

<div class="container-fluid">
    <!-- Page Header -->
    <div class="page-header d-flex justify-content-between align-items-center">
        <h1><i class="bi bi-file-earmark-text"></i> Quản Lý Hợp Đồng</h1>
        <div>
            <a asp-action="Create" class="btn btn-success">
                <i class="bi bi-plus-circle"></i> Tạo hợp đồng mới
            </a>
            <a asp-action="TimPhieuDatCho" class="btn btn-primary">
                <i class="bi bi-search"></i> Tìm phiếu đặt chỗ
            </a>
            <a asp-action="LichSuKhachHang" class="btn btn-info">
                <i class="bi bi-clock-history"></i> Lịch sử khách hàng
            </a>
        </div>
    </div>

    <!-- Notification Banner khi có đơn mới -->
    @if (ViewBag.DonChoXuLyMoi > 0)
    {
        <div class="notification-banner" id="newOrderNotification">
            <div class="notification-content">
                <div class="notification-text">
                    <i class="bi bi-exclamation-triangle-fill"></i>
                    <div>
                        <strong>Có @ViewBag.DonChoXuLyMoi đơn đặt xe mới hôm nay!</strong>
                        <div style="font-size: 14px; opacity: 0.9; margin-top: 2px;">
                            Các đơn đang chờ xử lý cần được xác nhận và tạo hợp đồng.
                        </div>
                    </div>
                </div>
                <div class="notification-actions">
                    <a href="@Url.Action("DonChoXuLy")" class="btn-notification">
                        <i class="bi bi-arrow-right"></i> Xử lý ngay
                    </a>
                    <button type="button" class="close-notification" onclick="closeNotification()">
                        <i class="bi bi-x"></i>
                    </button>
                </div>
            </div>
        </div>
    }

    <!-- Statistics -->
    <div class="row stat-cards">
        <div class="col-lg-3 col-md-6 mb-3">
            <div class="stat-card">
                <div class="stat-icon-container">
                    <i class="bi bi-file-text" style="color: #666;"></i>
                </div>
                <div class="stat-number-container">
                    <div class="stat-number">@ViewBag.TotalItems</div>
                </div>
                <div class="stat-label-container">
                    <div class="stat-label">Tổng hợp đồng</div>
                </div>
                <div class="stat-extra-container">
                    <!-- Empty space for alignment -->
                </div>
            </div>
        </div>
        <div class="col-lg-3 col-md-6 mb-3">
            <a href="@Url.Action("DonChoXuLy")" class="text-decoration-none @(ViewBag.DonChoXuLyMoi > 0 ? "has-new-orders" : "")">
                <div class="stat-card" style="cursor: pointer; transition: all 0.3s; border: 2px solid transparent;">
                    <!-- Badge "new" chỉ hiện khi có đơn mới -->
                    @if (ViewBag.DonChoXuLyMoi > 0)
                    {
                        <div class="new-notification-badge" title="@ViewBag.DonChoXuLyMoi đơn mới hôm nay">
                            @ViewBag.DonChoXuLyMoi
                        </div>
                    }
                    <div class="stat-icon-container">
                        <i class="bi bi-hourglass-split" style="color: #ff6b35;"></i>
                    </div>
                    <div class="stat-number-container">
                        <div class="stat-number" style="color: #ff6b35;">@ViewBag.DonChoXuLy</div>
                    </div>
                    <div class="stat-label-container">
                        <div class="stat-label">Đơn chờ xử lý</div>
                    </div>
                    <div class="stat-extra-container">
                        <div class="text-muted small">
                            @if (ViewBag.DonChoXuLyMoi > 0)
                            {
                                <span class="text-danger fw-bold">@ViewBag.DonChoXuLyMoi mới hôm nay!</span>
                            }
                            else
                            {
                                <span>Click để xử lý</span>
                            }
                        </div>
                    </div>
                </div>
            </a>
        </div>
        <div class="col-lg-3 col-md-6 mb-3">
            <div class="stat-card">
                <div class="stat-icon-container">
                    <i class="bi bi-clock" style="color: #28a745;"></i>
                </div>
                <div class="stat-number-container">
                    <div class="stat-number stat-active">@ViewBag.TongDangThue</div>
                </div>
                <div class="stat-label-container">
                    <div class="stat-label">Đang thuê</div>
                </div>
                <div class="stat-extra-container">
                    <!-- Empty space for alignment -->
                </div>
            </div>
        </div>
        <div class="col-lg-3 col-md-6 mb-3">
            <div class="stat-card">
                <div class="stat-icon-container">
                    <i class="bi bi-check-circle" style="color: #17a2b8;"></i>
                </div>
                <div class="stat-number-container">
                    <div class="stat-number stat-completed">@ViewBag.TongHoanThanh</div>
                </div>
                <div class="stat-label-container">
                    <div class="stat-label">Hoàn thành</div>
                </div>
                <div class="stat-extra-container">
                    <!-- Empty space for alignment -->
                </div>
            </div>
        </div>
    </div>

    <!-- Filter -->
    <div class="filter-section">
        <form method="get" class="row g-3 align-items-center">
            <div class="col-md-3">
                <select name="trangThai" class="form-select">
                    <option value="">Tất cả trạng thái</option>
                    <option value="Đang thuê" selected="@(ViewBag.TrangThai == "Đang thuê" ? "selected" : null)">Đang thuê</option>
                    <option value="Hoàn thành" selected="@(ViewBag.TrangThai == "Hoàn thành" ? "selected" : null)">Hoàn thành</option>
                    <option value="Hủy" selected="@(ViewBag.TrangThai == "Hủy" ? "selected" : null)">Hủy</option>
                </select>
            </div>
            <div class="col-md-2">
                <button type="submit" class="btn btn-secondary">
                    <i class="bi bi-funnel"></i> Lọc
                </button>
            </div>
            <div class="col-md-4 ms-auto">
                <div class="search-box">
                    <i class="bi bi-search search-icon"></i>
                    <input type="text"
                           id="searchPhone"
                           class="form-control search-input"
                           placeholder="Tìm theo số điện thoại..."
                           maxlength="20">
                    <i class="bi bi-x-circle clear-search" id="clearSearch"></i>
                </div>
            </div>
        </form>
    </div>

    <!-- Table -->
    <!-- Cập nhật phần table header trong Views/QuanLyHopDong/Index.cshtml -->

        <table class="table table-hover mb-0" id="contractTable">
            <thead class="table-light">
                <tr>
                    <th>Mã HĐ</th>
                    <th>Khách hàng</th>
                    <th>Xe</th>
                    <th>Ngày nhận</th>
                    <th>Ngày trả</th>
                    <th>Tổng tiền</th>
                    <th>Trạng thái</th>
                    <th>Hóa đơn</th> <!-- Thêm cột này -->
                    <th>Thao tác</th>
                </tr>
            </thead>
            <tbody>
                @foreach (var item in Model)
                {
                    <tr data-phone="@item.SoDienThoai">
                        <td><strong>HD@(item.MaHopDong.ToString("D6"))</strong></td>
                        <td>
                            @item.HoTenKhach<br />
                            <small class="text-muted phone-number">@item.SoDienThoai</small>
                        </td>
                        <td>
                            @if (item.ChiTietHopDong?.Any() == true)
                            {
                                var xe = item.ChiTietHopDong.First();
                                @xe.Xe?.TenXe<br />
                                <small class="text-muted">@xe.Xe?.BienSoXe</small>
                                
                                @if (item.ChiTietHopDong.Count > 1)
                                {
                                    <small class="text-primary">(+@(item.ChiTietHopDong.Count - 1) xe khác)</small>
                                }
                            }
                            else
                            {
                                <span class="text-muted">Chưa có xe</span>
                            }
                        </td>
                        <td>@item.NgayNhanXe.ToString("dd/MM/yyyy")</td>
                        <td>
                            @if (item.NgayTraXeThucTe.HasValue)
                            {
                                @item.NgayTraXeThucTe.Value.ToString("dd/MM/yyyy")
                            }
                            else
                            {
                                @item.NgayTraXeDuKien.ToString("dd/MM/yyyy")
                                <small class="text-muted">(dự kiến)</small>
                            }
                        </td>
                        <td class="text-danger fw-bold">@item.TongTien.ToString("N0")đ</td>
                        <td>
                            @{
                                string statusClass = item.TrangThai switch
                                {
                                    "Đang thuê" => "status-active",
                                    "Hoàn thành" => "status-completed",
                                    "Hủy" => "status-cancelled",
                                    _ => ""
                                };
                            }
                            <span class="status-badge @statusClass">@item.TrangThai</span>
                        </td>
                        <!-- Thêm cột hóa đơn -->
                        <td>
                            @if (item.HoaDon != null)
                            {
                                <a asp-controller="QuanLyHoaDon" asp-action="ChiTiet" asp-route-id="@item.HoaDon.MaHoaDon" 
                                   class="badge bg-success text-decoration-none" title="Xem hóa đơn">
                                    <i class="bi bi-check-circle"></i> HD@(item.HoaDon.MaHoaDon.ToString("D6"))
                                </a>
                            }
                            else if (item.TrangThai == "Hoàn thành")
                            {
                                <span class="badge bg-warning">
                                    <i class="bi bi-exclamation-triangle"></i> Chưa có
                                </span>
                            }
                            else
                            {
                                <span class="badge bg-secondary">-</span>
                            }
                        </td>
                        <td>
                            <a asp-action="ChiTiet" asp-route-id="@item.MaHopDong" class="btn btn-sm btn-info" title="Chi tiết">
                                <i class="bi bi-eye"></i>
                            </a>
                            @if (item.TrangThai == "Đang thuê")
                            {
                                <a asp-action="TraXe" asp-route-id="@item.MaHopDong" class="btn btn-sm btn-success" title="Trả xe">
                                    <i class="bi bi-check-circle"></i>
                                </a>
                            }
                            @if (item.TrangThai == "Hoàn thành" && item.HoaDon == null)
                            {
                                <button class="btn btn-sm btn-warning" onclick="taoHoaDonTuIndex(@item.MaHopDong, '@item.HoTenKhach')" title="Tạo hóa đơn">
                                    <i class="bi bi-receipt"></i>
                                </button>
                            }
                        </td>
                    </tr>
                }
            </tbody>
        </table>


<!-- Modal tạo hóa đơn từ index -->
<div class="modal fade" id="taoHoaDonIndexModal" tabindex="-1">
    <div class="modal-dialog">
        <div class="modal-content">
            <div class="modal-header">
                <h5 class="modal-title">Tạo hóa đơn thanh toán</h5>
                <button type="button" class="btn-close" data-bs-dismiss="modal"></button>
            </div>
            <div class="modal-body">
                <form id="taoHoaDonIndexForm">
                    @Html.AntiForgeryToken()
                    <input type="hidden" id="maHopDongIndex" />
                    
                    <div class="alert alert-info">
                        <i class="bi bi-info-circle"></i>
                        <strong>Xác nhận tạo hóa đơn</strong><br />
                        Khách hàng: <span id="tenKhachHangIndex"></span><br />
                        Hóa đơn sẽ được tạo với trạng thái "Đã thanh toán"
                    </div>

                    <div class="mb-3">
                        <label class="form-label">Ghi chú (tùy chọn)</label>
                        <textarea id="ghiChuHoaDonIndex" class="form-control" rows="3"
                                  placeholder="Ghi chú thêm cho hóa đơn..."></textarea>
                    </div>
                </form>
            </div>
            <div class="modal-footer">
                <button type="button" class="btn btn-secondary" data-bs-dismiss="modal">Hủy</button>
                <button type="button" class="btn btn-success" onclick="xacNhanTaoHoaDonIndex()">
                    <i class="bi bi-check-circle"></i> Xác nhận tạo
                </button>
            </div>
        </div>
    </div>
</div>

@section Scripts {
    <script>
        $(document).ready(function() {
            const searchInput = $('#searchPhone');
            const clearButton = $('#clearSearch');
            const contractTable = $('#contractTable');
            const noResults = $('#noResults');
            let searchTimeout;

            // Show/hide clear button
            searchInput.on('input', function() {
                const value = $(this).val();
                if (value.length > 0) {
                    clearButton.show();
                } else {
                    clearButton.hide();
                }

                // Clear previous timeout
                clearTimeout(searchTimeout);

                // Set new timeout for search
                searchTimeout = setTimeout(function() {
                    performSearch(value);
                }, 300); // 300ms delay
            });

            // Clear search
            clearButton.on('click', function() {
                searchInput.val('');
                clearButton.hide();
                performSearch('');
                searchInput.focus();
            });

            // Perform search function
            function performSearch(searchValue) {
                const rows = contractTable.find('tbody tr');
                let hasResults = false;

                if (searchValue === '') {
                    // Show all rows
                    rows.show().removeClass('highlight-row');
                    contractTable.show();
                    noResults.hide();
                    return;
                }

                // Search logic
                rows.each(function() {
                    const row = $(this);
                    const phone = row.data('phone');

                    if (phone && phone.toString().includes(searchValue)) {
                        row.show().addClass('highlight-row');
                        hasResults = true;
                    } else {
                        row.hide().removeClass('highlight-row');
                    }
                });

                // Show/hide no results message
                if (hasResults) {
                    contractTable.show();
                    noResults.hide();
                } else {
                    contractTable.hide();
                    noResults.show();
                }
            }

            // Format phone number input (optional)
            searchInput.on('keypress', function(e) {
                // Only allow numbers, spaces, and common phone characters
                const char = String.fromCharCode(e.which);
                if (!/[0-9\s\-\+\(\)]/.test(char)) {
                    e.preventDefault();
                }
            });

            // Handle Enter key
            searchInput.on('keydown', function(e) {
                if (e.key === 'Enter') {
                    e.preventDefault();
                    const foundRows = contractTable.find('tbody tr:visible');
                    if (foundRows.length === 1) {
                        // If only one result, go to detail
                        const detailLink = foundRows.find('a[title="Chi tiết"]');
                        if (detailLink.length > 0) {
                            window.location.href = detailLink.attr('href');
                        }
                    }
                }
            });
        });

        // Function tạo hóa đơn từ index
        function taoHoaDonTuIndex(maHopDong, tenKhach) {
            console.log('Tao hoa don tu index:', maHopDong, tenKhach);
            
            // Set giá trị
            $('#maHopDongIndex').val(maHopDong);
            $('#tenKhachHangIndex').text(tenKhach);
            $('#ghiChuHoaDonIndex').val('');
            
            // Hiển thị modal
            var myModal = new bootstrap.Modal(document.getElementById('taoHoaDonIndexModal'));
            myModal.show();
        }

        function xacNhanTaoHoaDonIndex() {
            var maHopDong = $('#maHopDongIndex').val();
            var ghiChu = $('#ghiChuHoaDonIndex').val();

            // Hiển thị loading
            var btn = $('#taoHoaDonIndexModal .modal-footer .btn-success');
            var originalText = btn.html();
            btn.html('<span class="spinner-border spinner-border-sm"></span> Đang tạo...').prop('disabled', true);

            $.ajax({
                url: '@Url.Action("TaoHoaDon", "QuanLyHoaDon")',
                type: 'POST',
                data: {
                    maHopDong: maHopDong,
                    ghiChu: ghiChu,
                    __RequestVerificationToken: $('input[name="__RequestVerificationToken"]').val()
                },
                success: function(response) {
                    if (response.success) {
                        if (typeof toastr !== 'undefined') {
                            toastr.success(response.message);
                        } else {
                            alert(response.message);
                        }
                        setTimeout(function() {
                            location.reload();
                        }, 1000);
                    } else {
                        if (typeof toastr !== 'undefined') {
                            toastr.error(response.message);
                        } else {
                            alert('Lỗi: ' + response.message);
                        }
                        btn.html(originalText).prop('disabled', false);
                    }
                },
                error: function(xhr, status, error) {
                    var errorMsg = 'Có lỗi xảy ra: ' + error;
                    if (typeof toastr !== 'undefined') {
                        toastr.error(errorMsg);
                    } else {
                        alert(errorMsg);
                    }
                    btn.html(originalText).prop('disabled', false);
                },
                complete: function() {
                    bootstrap.Modal.getInstance(document.getElementById('taoHoaDonIndexModal')).hide();
                }
            });
        }

        // Function để đóng notification banner
        function closeNotification() {
            const notification = document.getElementById('newOrderNotification');
            if (notification) {
                // Thêm animation fade out
                notification.style.animation = 'slideOutUp 0.3s ease-in forwards';
                
                // Xóa element sau khi animation hoàn thành
                setTimeout(function() {
                    notification.remove();
                }, 300);
                
                // Lưu vào localStorage để không hiện lại trong phiên làm việc
                localStorage.setItem('hiddenNotification_' + new Date().toDateString(), 'true');
            }
        }

        // Kiểm tra xem có nên hiện notification không (tùy chọn)
        $(document).ready(function() {
            const notification = document.getElementById('newOrderNotification');
            if (notification) {
                const today = new Date().toDateString();
                const isHidden = localStorage.getItem('hiddenNotification_' + today);
                
                if (isHidden === 'true') {
                    notification.style.display = 'none';
                }
            }
        });
    </script>

    <style>
        @@keyframes slideOutUp {
            from {
                transform: translateY(0);
                opacity: 1;
            }
            to {
                transform: translateY(-100%);
                opacity: 0;
            }
        }
    </style>
}
